apply plugin: 'com.android.application'

ext {
    archivesBaseName = 'dash-wallet'
    androidSupportVersion = '28.0.0'
    lifecycleVersion = "2.1.0"
}
repositories {
    mavenLocal()
    maven {
        url 'http://oss.jfrog.org/artifactory/oss-snapshot-local'
        name 'OJO snapshots'
    }
    maven {
        url 'https://maven.google.com/'
        name 'Google'
    }
}

dependencies {
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation(project(':integration-android')) {
        exclude(group: 'com.google.android', module: 'android')
    }
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.core:core:1.1.0'
    implementation('androidx.legacy:legacy-support-v13:1.0.0') {
        exclude(group: 'com.android.support', module: 'support-fragment')
        exclude(group: 'com.android.support', module: 'support-media-compat')
    }
    implementation 'androidx.legacy:legacy-support-core-utils:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android:flexbox:1.1.0'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
    implementation "org.dashj:dashj-core:$dashjVersion"
    implementation 'com.google.protobuf:protobuf-java:3.4.0'
    implementation 'com.google.guava:guava:27.0.1-android'
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'com.squareup.okhttp:okhttp:2.7.5'
    implementation 'com.squareup.okhttp:logging-interceptor:2.7.5'
    implementation 'com.squareup.moshi:moshi:1.6.0'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation('com.github.tony19:logback-android-classic:1.1.1-6') {
        exclude(group: 'com.google.android', module: 'android')
    }
    implementation 'com.github.tony19:logback-android-core:1.1.1-6'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    implementation project(path: ':common')
    implementation project(path: ':ui-redesign')
    annotationProcessor 'androidx.room:room-compiler:2.1.0'

    //Uphold Integration
    implementation project(path: ':uphold-integration')

    implementation 'androidx.multidex:multidex:2.0.1'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.1.0'

    implementation 'com.google.firebase:firebase-analytics:17.2.0'
    implementation ('com.google.firebase:firebase-inappmessaging:19.0.1') {
        exclude group: 'com.google.protobuf', module: 'protobuf-lite'
        exclude group: 'com.google.firebase', module: 'protolite-well-known-types'
        exclude group: 'io.grpc', module: 'grpc-api'
        exclude group: 'io.grpc', module: 'grpc-context'
        exclude group: 'io.grpc', module: 'grpc-okhttp'
        exclude group: 'io.grpc', module: 'grpc-protobuf-lite'
        exclude group: 'io.grpc', module: 'grpc-stub'
        exclude group: 'io.grpc', module: 'grpc-core'
    }
    implementation ('com.google.firebase:firebase-inappmessaging-display:19.0.1') {
        exclude group: 'com.google.protobuf', module: 'protobuf-lite'
        exclude group: 'com.google.firebase', module: 'protolite-well-known-types'
        exclude group: 'io.grpc', module: 'grpc-api'
        exclude group: 'io.grpc', module: 'grpc-context'
        exclude group: 'io.grpc', module: 'grpc-okhttp'
        exclude group: 'io.grpc', module: 'grpc-protobuf-lite'
        exclude group: 'io.grpc', module: 'grpc-stub'
        exclude group: 'io.grpc', module: 'grpc-core'
    }

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"

    testImplementation 'junit:junit:4.12'
    //Espresso
    androidTestImplementation ('androidx.test:runner:1.1.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation ('androidx.test.espresso:espresso-core:3.1.0') {
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation ('androidx.test.espresso:espresso-intents:3.1.0') {
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}


ext {
    archivesBaseName = 'dash-wallet'
}

configurations {
    compile.exclude group: 'com.google.protobuf', module: 'protobuf-lite'
}

android {
    compileSdkVersion 28

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        multiDexEnabled true
        generatedDensities = ['hdpi', 'xhdpi']
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'armeabi-v7a', 'x86', 'arm64-v8a', 'x86_64'
        }
        externalNativeBuild {
            cmake {
                cFlags '-DHAVE_CONFIG_H -DWORD=32'
                cppFlags ""
            }
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        all {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg', 'proguardTest-rules.txt'
        }
        debug {
            debuggable true
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        test {
            java.srcDirs = ['test']
            resources.srcDirs = ['test']
        }
        androidTest {
            java.srcDirs = ['androidTest']
            resources.srcDirs = ['androidTest/java']
            res.srcDirs = ['androidTest/testNet3/res']
        }
        _testNet3 {
            res.srcDirs = ["testNet3/res"]
        }
        beta {
            res.srcDirs = ["beta/res"]
        }
        devNet {
            res.srcDirs = ["devNet/res"]
        }
    }
    flavorDimensions "default"
    productFlavors {
        beta {
            applicationId = "hashengineering.dash.wallet.beta"
        }
        prod {
            applicationId = "hashengineering.darkcoin.wallet"
        }
        _testNet3 {
            applicationId = "hashengineering.darkcoin.wallet_test"
        }
        devNet {
            applicationId = "hashengineering.darkcoin.wallet.devnet"
        }
    }
    externalNativeBuild {
        cmake {
            path 'cpp/CMakeLists.txt'
        }
    }
    packagingOptions {
        exclude 'lib/x86_64/darwin/libscrypt.dylib'
        exclude 'lib/x86_64/freebsd/libscrypt.so'
        exclude 'lib/x86_64/linux/libscrypt.so'
        exclude 'com/google/thirdparty/publicsuffix/PublicSuffixPatterns.gwt.xml'
        exclude 'com/google/thirdparty/publicsuffix/PublicSuffixType.gwt.xml'
        exclude 'org/bitcoinj/crypto/mnemonic/wordlist/english.txt'
        exclude 'org/bitcoinj/crypto/cacerts'
        exclude 'org.bitcoin.production.checkpoints.txt'
        exclude 'org.bitcoin.test.checkpoints.txt'
    }
    dexOptions {
        preDexLibraries true
    }
}

clean {
    file('src/main/jniLibs').deleteDir()
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
